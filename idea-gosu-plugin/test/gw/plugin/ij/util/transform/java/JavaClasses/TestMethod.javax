package gw.util.transform.java.JavaClasses;

import java.io.EOFException;
import java.util.*;

public class TestMethod {

  public TestMethod() {

  }

  public void thrower() throws IndexOutOfBoundsException, EOFException {
  }

  public void annotationInArg(@SuppressWarnings("foo") int foo) {
      @SuppressWarnings("bar") int bar;
  }

  public int size() {
    int a[] = new int[]{3, 5, 1};
    Arrays.sort(a);
    return 0;
  }

  public boolean isEmpty() {
    return false;
  }

  public boolean contains(Object o) {
    return false;
  }

  public Iterator iterator() {
    return null;
  }

  public Object[] toArray() {
    return new Object[0];
  }

  public Object[] toArray(Object[] a) {
    return new Object[0];
  }

  public boolean add(Object o) {
    return false;
  }

  public boolean remove(Object o) {
    return false;
  }

  public boolean containsAll(Collection c) {
    return false;
  }

  public boolean addAll(Collection c) {
    return false;
  }

  public boolean addAll(int in, Collection c) {
    return false;
  }

  public boolean removeAll(Collection c) {
    return false;
  }

  public boolean retainAll(Collection c) {
    return false;
  }

  public void clear() {
  }

  public Object get(int in) {
    return null;
  }

  public Object set(int in, Object element) {
    return null;
  }

  public void add(int in, Object element) {
  }

  public Object remove(int in) {
    return null;
  }

  public int indexOf(Object o) {
    return 0;
  }

  public int lastIndexOf(Object o) {
    return 0;
  }

  public ListIterator listIterator() {
    return null;
  }

  public ListIterator listIterator(int in) {
    return null;
  }

  public List subList(int fromIndex, int toIndex) {
    return null;
  }
}
